// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum CourseDifficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model User {
  id       String   @id @default(cuid())
  username String
  email    String
  password String
  role     UserRole @default(USER)

  Account      Account[]
  CourseReview CourseReview[]
}

model Course {
  id          String  @id @default(cuid())
  title       String
  description String? @db.Text
  cost        String?
  image       String?

  userId String

  difficulty CourseDifficulty?
  category   String?

  isPublished Boolean @default(false)

  //add Schema relation
  //chapters, Reviews
  CourseReview CourseReview[]
  Chapter      Chapter[]
}

model CourseReview {
  id       String @id @default(cuid())
  userId   String @unique
  courseId String @unique

  review    String @db.Text
  studentId String
  rating    String

  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chapter {
  id          String  @id @default(cuid())
  title       String?
  description String?
  position    Int?
  isPublished Boolean @default(false)
  isFree      Boolean @default(false)

  courseId String

  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
